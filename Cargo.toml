[package]
name         = "esptest"
version      = "0.1.0"
edition      = "2021"
rust-version = "1.76.0"

[dependencies]
defmt            = "0.3.8"
defmt-rtt        = "0.4.1"
display-interface-i2c = "0.5.0"
embassy-embedded-hal = { version = "0.2.0", features = ["defmt"] }
embassy-executor = { version = "0.6.0",  features = ["defmt"] }
embassy-sync = { version = "0.6.0", features = ["defmt"] }
embassy-time     = { version = "0.3.2",  features = ["generic-queue-8"] }
embedded-graphics = { version = "0.8.1", features = ["defmt"] }
esp-backtrace    = { version = "0.14.0", features = ["esp32c6", "defmt", "exception-handler", "panic-handler"] }
esp-hal          = { git = "https://github.com/esp-rs/esp-hal", rev = "f5b8e4b9145ea1c368ec40c2c84d694955f19f68", features = ["esp32c6", "defmt"] }
esp-hal-embassy  = { git = "https://github.com/esp-rs/esp-hal", rev = "f5b8e4b9145ea1c368ec40c2c84d694955f19f68", features = ["esp32c6", "defmt"] }
esp-println      = { version = "0.11.0", features = ["esp32c6", "defmt-espflash"] }
ssd1306 = "0.9.0"
static_cell = "2.1.0"

[profile.release]
debug         = true  # Debug info is useful, and does not affect the size of the final binary
codegen-units = 1     # LLVM can perform better optimizations using a single thread
lto           = "fat" # Attempt to perform optimizations across all crates within the dependency graph
opt-level     = "s"   # Optimize for binary size, but keep loop vectorization enabled
